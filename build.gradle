// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {

        sdk = 28
        minSdk = 14

        github = 'https://github.com/florent37/SingleDateAndTimePicker'

        libraryGroup = 'com.github.florent37'
        libraryName = 'singledateandtimepicker'
        libraryVersion = "2.2.8"
        libraryDescription = 'SingleDateAndTimePicker'


        /* DEPENDENCIES VERSION CODES */

        /* Gradle */
        gradleVersion = '3.3.2'
        multidexVersion = '2.0.0'
        videoAndroid      = '6.3.0'
        audioSwitch        = '1.1.2'
        /* Kotlin Dependencies */
        kotlin_version = '1.3.72'
        ktlintVersion = '0.29.0'
        ktxVersion = '1.0.1'
        supportLibrary='26.1.0'
        ion ='2.1.8'
        /* Kotlin Coroutines */
        kotlinCoroutineVersion = "1.1.1"
        /* Kotlin Koin DI */
        koin_version = "2.0.0-rc-2"

        /* Android X UI  dependencies */
        constraintLayoutVersion = '1.1.3'
        materialVersion = '1.0.0'
        recyclerViewVersion = '1.1.0'

        /* Android X Support dependencies */
        lifecycleVersion = '2.0.0'
        roomVersion = '2.1.0-alpha03'
        runnerVersion = '1.0.1'
        supportLibraryVersion = '1.0.2'
        workVersion = '1.0.0-beta01'
        roomVersion = '2.2.5'

        /* Network Dependencies */
        /* Network Dependencies */
        okHttpLogVersion = '4.3.0'
        retrofitVersion = '2.7.1'
        gsonVersion = '2.8.6'
        kotlinCoroutineAdapterFactoryVersion = "0.9.2"

        /* UI Dependencies */
        glideVersion = '4.11.0'

        /* Testing Dependencies */
        coreTestingVersion = '2.0.0'
        junitVersion = '4.12'
        espressoVersion = '3.1.0'
        uiAutomatorVersion = '2.2.0-alpha4'

        /* Kotlin Support Dependencies */
        kotlinDependencies = [
                core             : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version",
                coroutinesCore   : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutineVersion",
                coroutinesAndroid: "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutineVersion",
        ]

        //Android x dependencies
        androidxDependencies = [
                ktx               : "androidx.core:core-ktx:$ktxVersion",
                appCompat         : "androidx.appcompat:appcompat:$supportLibraryVersion",
                constraintlayout  : "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion",
                lifecycleExtention: "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion",
                recyclerView      : "androidx.recyclerview:recyclerview:$recyclerViewVersion",
                multiDex          : "androidx.multidex:multidex:$multidexVersion",
                // Room components
                roomRuntime       : "androidx.room:room-runtime:$roomVersion",
                roomCompiler      : "androidx.room:room-compiler:$roomVersion",
        ]

        //Google dependencies
        googleDependencies = [
                material: "com.google.android.material:material:$materialVersion",
                gson    : "com.google.code.gson:gson:$gsonVersion"
        ]

        // Network Library Retrofit dependencies
        networkDependencies = [
                retrofit                     : "com.squareup.retrofit2:retrofit:$retrofitVersion",
                retrofitGsonConveter         : "com.squareup.retrofit2:converter-gson:$retrofitVersion",
                okHttpLogs                   : "com.squareup.okhttp3:logging-interceptor:$okHttpLogVersion",
                kotlinCoroutineAdapterFactory: "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$kotlinCoroutineAdapterFactoryVersion"
        ]


        uiDependencies = [
                glide        : "com.github.bumptech.glide:glide:${glideVersion}",
                glideCompiler: "com.github.bumptech.glide:compiler:${glideVersion}",
        ]

        kotlinDI = [
                core     : "org.koin:koin-android:$koin_version",
                scope    : "org.koin:koin-androidx-scope:$koin_version",
                viewModel: "org.koin:koin-androidx-viewmodel:$koin_version"
        ]

        /* Testing Dependencies */
        androidxTestingDependencies = [
                archCore   : "androidx.arch.core:core-testing:$coreTestingVersion",
                core       : "androidx.test.espresso:espresso-core:$espressoVersion",
                contrib    : "androidx.test.espresso:espresso-contrib:$espressoVersion",
                intents    : "androidx.test.espresso:espresso-intents:$espressoVersion",
                uiAutoMator: "androidx.test.uiautomator:uiautomator:$uiAutomatorVersion",
        ]
    }
    repositories {
        maven { url 'https://bintray.com/rameshbhupathi/maven' }
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.google.gms:google-services:4.3.3'
        // Add the Crashlytics Gradle plugin.
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.1.0'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'    }
}

allprojects {
    repositories {
        maven { url 'https://bintray.com/rameshbhupathi/maven' }
        google()
        jcenter()
        maven { url 'https://maven.google.com/' }
        maven { url "https://jitpack.io" }
    }
}
subprojects {
    afterEvaluate {
        if (project.plugins.hasPlugin("kotlin-kapt")) {
            kapt {
                javacOptions {
                    option("-Xmaxerrs", 500)
                }
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
